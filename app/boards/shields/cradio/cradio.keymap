/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define OTH_L 2
#define NUM_L 3
#define SYM_L 4
#define MED_L 5
#define FUN_L 6
#define WIN_L 7
#define GAM_L 8

//	0	1	2	3	4		5	6	7	8	9 
//	10	11	12	13	14		15	16	17	18	19
//	20	21	22	23	24		25	26	27	28	29
//				30	31		32	33
// 		>;

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
	&lt { quick_tap_ms = <200>; }; 
/ {
    combos  {
 	compatible="zmk,combos";

 	bt_mo {
 		timeout-ms=<50>;
 		key-positions=<31 32>;
 		bindings=<&mo OTH_L>;
 	}
 	;

 	med_mo {
 		timeout-ms=<50>;
 		key-positions=<30 31>;
 		bindings=<&mo MED_L>;
 	}

 	;

 	fn_mo {
 		timeout-ms=<50>;
 		key-positions=<33 32>;
 		bindings=<&mo FUN_L>;
 	}

 	;

 	combo_one {
 		timeout-ms=<50>;
 		key-positions=<0 10>;
 		bindings=<&kp N1>;
 	}

 	;

 	combo_two {
 		timeout-ms=<50>;
 		key-positions=<1 11>;
 		bindings=<&kp N2>;
 	}

 	;

 	combo_three {
 		timeout-ms=<50>;
 		key-positions=<2 12>;
 		bindings=<&kp N3>;
 	}

 	;

 	combo_four {
 		timeout-ms=<50>;
 		key-positions=<3 13>;
 		bindings=<&kp N4>;
 	}

 	;

 	combo_five {
 		timeout-ms=<50>;
 		key-positions=<4 14>;
 		bindings=<&kp N5>;
 	}

 	;

 	combo_six {
 		timeout-ms=<50>;
 		key-positions=<5 15>;
 		bindings=<&kp N6>;
 	}
 	;

 	combo_seven {
 		timeout-ms=<50>;
 		key-positions=<6 16>;
 		bindings=<&kp N7>;
 	}

 	;

 	combo_eight {
 		timeout-ms=<50>;
 		key-positions=<7 17>;
 		bindings=<&kp N8>;
 	}

 	;

 	combo_nine {
 		timeout-ms=<50>;
 		key-positions=<8 18>;
 		bindings=<&kp N9>;
 	}

 	;

 	combo_zero {
 		timeout-ms=<50>;
 		key-positions=<9 19>;
 		bindings=<&kp N0>;
 	};

	// combo_tab {
	// 	timeout-ms=<25>;
	// 	key-positions=<12 13>;
	// 	bindings=<&kp TAB>;
	// };
	// combo_tab2 {
	// 	timeout-ms=<25>;
	// 	key-positions=<34 35>;
	// 	bindings=<&kp TAB>;
	// };

	// combo_stab2 {
	// 	timeout-ms=<25>;
	// 	key-positions=<32 33>;
	// 	bindings=<&kp LS(TAB)>;
	// };

	combo_esc {
		timeout-ms=<25>;
		key-positions=<10	11	12	13>;
		bindings=<&kp ESC>;
	};

	combo_caps{
		timeout-ms=<25>;
		key-positions=<20	21	22	23>;
		bindings=<&kp CAPS>;
	};

	combo_undo{timeout-ms=<25>;
		key-positions=<29 30>;
		bindings=<&kp LG(Z)>;
	};

	combo_redo{timeout-ms=<25>;
		key-positions=<29 28>;
		bindings=<&kp LS(LG(Z))>;
	};
	combo_cut{
		timeout-ms=<25>;
		key-positions=<10 11>;
		bindings=<&kp LG(X)>;
	};
	combo_copy{
		timeout-ms=<25>;
		key-positions=<11 12>;
		bindings=<&kp LG(C)>;
	};
	combo_paste{
		timeout-ms=<25>;
		key-positions=<12 13>;
		bindings=<&kp LG(V)>;
	};
	combo_windows{
		timeout-ms=<25>;
		key-positions=<0 1 2 3>;
		bindings=<&tog WIN_L>;
	};
 };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <	&kp>;
        };
    };


        keymap {
                compatible = "zmk,keymap";
      
        default_layer {
            label = "Felix";
            bindings = <
	&kp Q		&kp W		&kp E		&kp R		&kp T			&kp Y		&kp U		&kp I		&kp O		&kp P
	&hm LALT A	&hm LCTRL S	&hm LGUI D	&hm LSHFT F	&kp G			&kp H		&hm RSHFT J	&hm RGUI K	&hm RCTRL L	&hm RALT QUOT
	&kp Z		&kp X		&kp C		&kp V		&kp B			&kp N		&kp M		&kp COMMA	&kp DOT		&kp FSLH
					&lt NAV_L TAB	&hm LGUI BKSP				&lt NUM_L SPACE	&lt SYM_L RET			
	>;

	};

	

        nav_layer {
            label = "Nav";
            bindings = <
	&kp LA(BSPC)	&kp LG(Z)	&kp UP		&kp LG(LS(Z))	&kp LA(DEL)		&trans		&kp LA(BSPC)	&kp LS(LG(TAB))	&kp LG(TAB)	&trans
	&kp LA(LEFT)	&kp LEFT	&kp DOWN	&kp RIGHT	&kp LA(RIGHT)		&kp LA(LEFT)	&kp LG(LBKT)	&kp LS(LG(TILDE)) &kp LG(TILDE) &kp LG(RBKT)
	&kp LG(LEFT)	&kp LS(LA(LEFT)) &kp RET	&kp LS(LA(RIGHT)) &kp LG(RIGHT)		&trans		&kp HOME	&kp LS(LC(TAB))	&kp LC(TAB)	&kp END
									&trans	&trans		&kp ESC	&kp DEL				
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4	&trans		&out OUT_USB	&trans		&trans		&trans	
	&trans		&trans		&trans		&trans		&bt BT_PRV	&bt BT_NXT	&trans		&trans		&trans		&trans
	&bt BT_CLR	&trans		&trans		&trans		&out OUT_BLE	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4
					&trans		&trans		&trans	&trans				
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
		&kp N1		&kp N2		&kp N3		&kp N4	&kp N5		&kp N6	&kp N7	&kp N8		&kp N9		&kp N0
		&hm LALT TAB	&hm LCTRL LBKT	&hm LGUI RBKT	&trans	&trans		&trans	&trans	&hm RGUI LBKT	&hm RCTRL RBKT	&hm RALT SEMI
		&kp GRAVE	&kp MINUS	&kp EQUAL	&trans	&trans		&trans	&trans	&kp MINUS	&kp EQUAL	&kp BSLH
								&kp DEL	&kp BKSP	&trans	&trans			
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <	
		&kp LS(N1)	 &kp LS(N2)		&kp LS(N3)		&kp LS(N4)	&kp LS(N5)	&kp LS(N6)	&kp LS(N7)	&kp LS(N8)		&kp LS(N9)		&kp LS(N0)
		&hm LALT LS(TAB) &hm LCTRL LS(LBKT)	&hm LGUI LS(RBKT)	&trans		&trans		&trans		&trans		&hm RGUI LS(LBKT)	&hm RCTRL LS(RBKT)	&hm RALT LS(SEMI)
		&kp LS(GRAVE)	 &kp LS(MINUS)		&kp LS(EQUAL)		&trans		&trans		&kp LS(MINUS)	&kp LS(EQUAL)	&kp LS(BSLH)		&trans			&trans	
										&kp DEL		&kp BKSP	&trans		&trans 		
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
	&trans	&trans	&trans	&trans	&trans		&trans		&trans		&trans		&trans		&trans
	&trans	&trans	&trans	&trans	&trans		&trans		&kp C_PREV	&kp C_VOL_DN	&kp C_VOL_UP	&kp C_NEXT
	&trans	&trans	&trans	&trans	&trans		&trans		&trans		&trans		&trans		&trans
				&trans	&trans		&kp C_STOP	&kp C_PLAY_PAUSE 				
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
	    			
		&kp F1	&kp F2		&kp F3  	&kp F4	&kp F5	&kp F6	&kp F7	&kp F8	&kp F9	&kp F10		
		&kp F11	&kp F12		&trans		&trans	&trans	&trans	&trans	&trans	&trans	&trans
		&kp SLCK&kp PSCRN	&kp PAUSE_BREAK &trans	&trans	&trans	&trans	&trans	&trans	&trans
							&tog 7	&to 7	&none	&none	
            >;
        };
        

	windows_layer {
            label = "Windows";
            bindings = <
	&kp Q		&kp W		&kp E		&kp R		&kp T			&kp Y		&kp U		&kp I		&kp O		&kp P
	&kp A		&hm LALT S	&hm LCTRL D	&hm LSHFT F	&kp G			&kp H		&hm RSHFT J	&hm RCTRL K	&hm RALT L	&kp QUOT
	&hm LGUI Z	&kp X		&kp C		&kp V		&kp B			&kp N		&kp M		&kp COMMA	&kp DOT		&kp FSLH
					&lt NAV_L TAB	&hm LCTRL BKSP				&lt NUM_L SPACE	&lt SYM_L RET			
                    >;

	};

	// games_layer {
        //     label = "Games";
        //     bindings = <
	// &kp Q	&kp W	&kp E	&kp R	&kp T		&kp Y	&kp U	&kp I	&kp O	&kp P
	// &kp A	&kp S	&kp D	&kp F	&kp G		&kp H	&kp J	&kp K	&kp L	&kp QUOT
	// &kp LCTRL &kp X	&kp C	&kp V	&kp B		&kp N	&kp M	&kp COMMA	&kp DOT	&kp FSLH
	// 		&kp SHIFT &kp SPACE		&lt NUM_L SPACE	&lt SYM_L RET			
        //             >;

	// };
	};
};
